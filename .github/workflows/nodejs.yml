name: Test & Build

on:
  push:
    branches: [ master, dev ]

  pull_request:
    branches: [ master, dev ]

jobs:
  tests:
    runs-on: ubuntu-latest

    container:
      image: node:14

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: 'root'
          POSTGRES_PASSWORD: 'root'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      AUTH0_DOMAIN: 'test.com'
      AUTH0_AUDIENCE: 'test'
      AUTH0_CLIENT_ID: 'test'
      AUTH0_CLIENT_SECRET: 'test'
      AUTH_STRATEGY: 'jwt'
      TYPEORM_CONNECTION: 'postgres'
      TYPEORM_HOST: 'postgres'
      TYPEORM_PORT: 5432
      TYPEORM_USERNAME: 'root'
      TYPEORM_PASSWORD: 'root'
      TYPEORM_ENTITIES: 'src/**/*entity.ts'
      TYPEORM_MIGRATIONS: 'db/migrations/*.ts'
      TYPEORM_MIGRATIONS_DIR: 'db/migrations'
      TYPEORM_LOGGING: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup
        id: setup
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.setup.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Lint
        run: yarn run lint

      - name: Migrate
        run: yarn run migration:run

      - name: Tests
        run: yarn test --coverage --verbose
        env:
          CI: true
          LOG_LEVEL: 'WARNING'

      - name: Codecov
        uses: codecov/codecov-action@v1.0.6

  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [ tests ]

    env:
      IMAGE_NAME: docker.pkg.github.com/jujulego/lucifer-api/lucifer-api

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup
        id: setup
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.setup.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Build
        run: yarn run build

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: lucifer-api
          path: build

      - name: Build Docker image
        run: docker build . --tag lucifer-api

      - name: Push Docker image
        run: |
          docker login docker.pkg.github.com -u jujulego -p ${{ secrets.GITHUB_TOKEN }}

          docker tag lucifer-api $IMAGE_NAME:${GITHUB_REF##*/}
          docker push $IMAGE_NAME:${GITHUB_REF##*/}
